# BossJy-Pro 子域名配置文件
# 配置各个子域名到对应端口的反向代理

# appai.tiankai.it.com 配置已移至 bossjy-complete.conf（前后端分离架构）
# 此配置已禁用以避免冲突
# appai.tiankai.it.com -> 端口 18001
# server {
#     listen 80;
#     listen 443 ssl http2;
#     server_name appai.tiankai.it.com;
#
#     # SSL 配置
#     ssl_certificate /etc/nginx/ssl/appai.tiankai.it.com.crt;
#     ssl_certificate_key /etc/nginx/ssl/appai.tiankai.it.com.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # 安全头
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # 重定向 HTTP 到 HTTPS
#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     }
#
#     # 健康检查端点
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
#
#     # 代理到端口 18001
#     location / {
#         proxy_pass http://host.docker.internal:18001;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # WebSocket 支持
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#
#         # API 超时设置
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # 处理大文件上传
#         client_max_body_size 100M;
#     }
# }

# bossjy.tiankai.it.com 配置已移至 bossjy-complete.conf
# 此配置已禁用以避免冲突
# bossjy.tiankai.it.com -> 端口 9001
# server {
#     listen 80;
#     listen 443 ssl http2;
#     server_name bossjy.tiankai.it.com;
#
#     # SSL 配置
#     ssl_certificate /etc/nginx/ssl/bossjy.tiankai.it.com.crt;
#     ssl_certificate_key /etc/nginx/ssl/bossjy.tiankai.it.com.key;
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
#     ssl_prefer_server_ciphers off;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#
#     # 安全头
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # 重定向 HTTP 到 HTTPS
#     if ($scheme != "https") {
#         return 301 https://$host$request_uri;
#     }
#
#     # 健康检查端点
#     location /health {
#         access_log off;
#         return 200 "healthy\n";
#         add_header Content-Type text/plain;
#     }
#
#     # 代理到端口 9001
#     location / {
#         proxy_pass http://host.docker.internal:9001;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#
#         # WebSocket 支持
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
#
#         # API 超时设置
#         proxy_connect_timeout 60s;
#         proxy_send_timeout 60s;
#         proxy_read_timeout 60s;
#
#         # 处理大文件上传
#         client_max_body_size 100M;
#     }
# }

# chat88.tiankai.it.com -> 端口 9002 (已启用)
server {
    listen 80;
    listen 443 ssl http2;
    server_name chat88.tiankai.it.com;

    # SSL 配置
    ssl_certificate /etc/nginx/ssl/chat88.tiankai.it.com.crt;
    ssl_certificate_key /etc/nginx/ssl/chat88.tiankai.it.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 重定向 HTTP 到 HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 代理到端口 9002
    location / {
        proxy_pass http://host.docker.internal:9002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # API 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 处理大文件上传
        client_max_body_size 100M;
    }
}

# jyt2.tiankai.it.com -> 端口 9003 (已启用)
server {
    listen 80;
    listen 443 ssl http2;
    server_name jyt2.tiankai.it.com;

    # SSL 配置
    ssl_certificate /etc/nginx/ssl/jyt2.tiankai.it.com.crt;
    ssl_certificate_key /etc/nginx/ssl/jyt2.tiankai.it.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 重定向 HTTP 到 HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 代理到端口 9003
    location / {
        proxy_pass http://host.docker.internal:9003;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # API 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 处理大文件上传
        client_max_body_size 100M;
    }
}

# admin2.tiankai.it.com -> 端口 9888 (已启用)
server {
    listen 80;
    listen 443 ssl http2;
    server_name admin2.tiankai.it.com;

    # SSL 配置
    ssl_certificate /etc/nginx/ssl/admin2.tiankai.it.com.crt;
    ssl_certificate_key /etc/nginx/ssl/admin2.tiankai.it.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # 安全头
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # 重定向 HTTP 到 HTTPS
    if ($scheme != "https") {
        return 301 https://$host$request_uri;
    }

    # 健康检查端点
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # 代理到端口 9888
    location / {
        proxy_pass http://host.docker.internal:9888;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket 支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # API 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 处理大文件上传
        client_max_body_size 100M;
    }
}