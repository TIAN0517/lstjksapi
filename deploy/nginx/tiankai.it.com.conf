# BossJy-Cn Nginx配置文件 - tiankai.it.com (主域名)
# 支持主域名和子域名配置
# 主域名: tiankai.it.com
# 子域名示例: api.tiankai.it.com, admin.tiankai.it.com

# HTTP重定向到HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name tiankai.it.com www.tiankai.it.com *.tiankai.it.com;

    # Let's Encrypt ACME验证
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # 其他请求重定向到HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS主站
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name tiankai.it.com www.tiankai.it.com;

    # 如果需要支持子域名，取消下面注释并申请通配符证书
    # server_name tiankai.it.com www.tiankai.it.com *.tiankai.it.com;

    # ===== SSL证书配置 =====
    # Let's Encrypt 证书
    ssl_certificate /etc/letsencrypt/live/tiankai.it.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/tiankai.it.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/tiankai.it.com/chain.pem;

    # 如果使用通配符证书（支持子域名），使用：
    # ssl_certificate /etc/letsencrypt/live/tiankai.it.com/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/tiankai.it.com/privkey.pem;

    # SSL安全配置（A+评级）
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # ===== 安全头（最高级别安全配置）=====
    # HSTS - 强制HTTPS，包含所有子域名，预加载到浏览器
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # 防止点击劫持
    add_header X-Frame-Options "DENY" always;

    # 防止MIME类型嗅探
    add_header X-Content-Type-Options "nosniff" always;

    # XSS防护
    add_header X-XSS-Protection "1; mode=block" always;

    # Referrer策略
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 权限策略 - 禁用所有危险功能
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=(), payment=(), usb=(), magnetometer=(), gyroscope=(), speaker=()" always;

    # CSP - 内容安全策略（防XSS攻击）
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdn.bootcdn.net; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdn.bootcdn.net; img-src 'self' data: https:; font-src 'self' https://cdn.jsdelivr.net data:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

    # 隐藏Nginx版本号
    server_tokens off;

    # 禁止不安全的HTTP方法
    if ($request_method !~ ^(GET|POST|PUT|DELETE|HEAD|OPTIONS)$ ) {
        return 405;
    }

    # ===== 日志配置 =====
    access_log /var/log/nginx/tiankai-access.log;
    error_log /var/log/nginx/tiankai-error.log warn;

    # ===== 上传文件大小限制 =====
    client_max_body_size 100M;

    # ===== Gzip压缩 =====
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json application/x-javascript;
    gzip_disable "msie6";

    # ===== 静态文件缓存 =====
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|woff|woff2|ttf|eot|svg|map)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # ===== DDoS防护和IP黑名单 =====
    # 限制单个IP的连接数
    limit_conn_zone $binary_remote_addr zone=tiankai_conn_limit:10m;
    limit_conn tiankai_conn_limit 20;

    # GeoIP封禁（可选，需要安装geoip模块）
    # 如果需要只允许特定国家访问，取消下面注释
    # geoip_country /usr/share/GeoIP/GeoIP.dat;
    # map $geoip_country_code $allowed_country {
    #     default no;
    #     CN yes;  # 中国
    #     HK yes;  # 香港
    #     TW yes;  # 台湾
    #     SG yes;  # 新加坡
    # }
    # if ($allowed_country = no) {
    #     return 403;
    # }

    # ===== API限流配置 =====
    limit_req_zone $binary_remote_addr zone=tiankai_api_limit:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=tiankai_login_limit:10m rate=3r/s;
    limit_req_zone $binary_remote_addr zone=tiankai_register_limit:10m rate=2r/s;

    # ===== API路由 =====
    location /api/ {
        # 限流 - 10请求/秒，突发20
        limit_req zone=tiankai_api_limit burst=20 nodelay;

        # 防止常见攻击
        if ($request_uri ~* "(union|select|insert|delete|drop|update|concat|script|alert|eval)") {
            return 403;
        }

        # 代理到Flask应用
        proxy_pass http://127.0.0.1:9001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_cache_bypass $http_upgrade;

        # 超时设置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # 缓冲设置
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
    }

    # ===== 登录API超严格限流（防暴力破解）=====
    location = /api/auth/login {
        limit_req zone=tiankai_login_limit burst=5 nodelay;
        limit_req_status 429;

        proxy_pass http://127.0.0.1:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # 登录失败记录（配合Fail2Ban）
        access_log /var/log/nginx/tiankai-login.log;
    }

    # ===== 注册API限流 =====
    location = /api/auth/register {
        limit_req zone=tiankai_register_limit burst=3 nodelay;
        limit_req_status 429;

        proxy_pass http://127.0.0.1:9001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        access_log /var/log/nginx/tiankai-register.log;
    }

    # ===== 根路径（Web页面）=====
    location / {
        proxy_pass http://127.0.0.1:9001;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
    }

    # ===== 健康检查 =====
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }

    # ===== 禁止访问隐藏文件 =====
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ===== 禁止访问备份文件 =====
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # ===== 禁止访问敏感文件 =====
    location ~* \.(env|git|svn|htaccess|htpasswd|ini|log|sh|sql|conf|key|pem)$ {
        deny all;
        return 404;
    }

    # ===== 禁止目录浏览 =====
    location ~ /$ {
        autoindex off;
    }

    # ===== 管理后台额外保护（可选）=====
    # 如果有管理后台，限制访问IP
    # location /admin {
    #     allow 你的IP地址;
    #     deny all;
    #
    #     proxy_pass http://127.0.0.1:5000;
    #     # ... 其他代理配置
    # }
}
